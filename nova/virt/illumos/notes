My question on use of configuration drive
https://answers.launchpad.net/nova/+question/181724

---

To use a configuration drive:

Remove cdrom mount command from /etc/fstab
mkdir /media/config
Add the following line:
/dev/disk/by-label/openstack_config	/media/config	udf,iso9660	ro	0	0

mkdir /root/.ssh
cd /root/.ssh
ln -s /media/config/root/.ssh/authorized_keys


ln -s /media/config/etc/network/interfaces /etc/network/interfaces

---

If we want to mount the ISO as a CD:

-drive file=/var/nova//instances/instance-0000003e/config.iso,if=none,id=drive-virtio-diskconfig_cd,boot=off,format=raw,media=cdrom \
-device ide-drive,drive=drive-virtio-diskconfig_cd,id=virtio-diskconfig_cd \

---

There's a race on the VNC port assignment

---

How do we keep files sparse on gunzip?  Idea: a Python helper program.
http://wiki.openstack.org/essex-golden-image

---

Example usage of Monitor (it can be used directly; useful for testing)
#from monitor import Monitor
#path = '/var/nova/instances/instance-00000058/instance.monitor'
#m = Monitor(path)  
#m.query_version()
#m.close()
#
#m.receive()
#
#m.send('{ "execute": "qmp_capabilities" }')
#m.receive()
#
#m.send('{ "execute": "query-kvm", "id": "example" }')
#m.receive()
#
##'{"return": [{"name": "quit"}, {"name": "eject"}, {"name": "change"}, {"name": "screendump"},
## {"name": "stop"}, {"name": "cont"}, {"name": "system_reset"}, {"name": "system_powerdown"}, 
##{"name": "device_add"}, {"name": "device_del"}, {"name": "cpu"}, {"name": "memsave"}, 
## {"name": "pmemsave"}, {"name": "migrate"}, {"name": "migrate_cancel"}, 
##{"name": "migrate_set_speed"}, {"name": "client_migrate_info"},
## {"name": "migrate_set_downtime"}, {"name": "netdev_add"}, {"name": "netdev_del"}, 
##{"name": "block_resize"}, {"name": "balloon"}, {"name": "set_link"}, {"name": "getfd"}, 
##{"name": "closefd"}, {"name": "block_passwd"}, {"name": "set_password"},
## {"name": "expire_password"}, {"name": "qmp_capabilities"}, {"name": "human-monitor-command"}, 
##{"name": "query-version"}, {"name": "query-commands"}, {"name": "query-chardev"}, {"name": "query-block"}, {"name": "query-blockstats"},
## {"name": "query-cpus"}, {"name": "query-pci"}, {"name": "query-kvm"}, {"name": "query-status"}, {"name": "query-mice"},
## {"name": "query-vnc"}, {"name": "query-name"}, {"name": "query-uuid"}, {"name": "query-migrate"},
## {"name": "query-balloon"}]}\r\n'
#
#
#m.send('{ "execute": "query-version" }')
#m.receive()
#m.send('{ "execute": "query-kvm" }')
#m.receive()
#m.send('{ "execute": "query-status" }')
#m.receive()
#m.send('{ "execute": "query-uuid" }')
#m.receive()
#m.send('{ "execute": "query-balloon" }')
#m.receive()
#m.send('{ "execute": "query-block" }')
#m.receive()
#m.send('{ "execute": "query-blockstats" }')
#m.receive()
#m.send('{ "execute": "query-pci" }')
#m.receive()
#m.send('{ "execute": "query-vnc" }')
#m.receive()
#
#m.send('{ "execute": "query-commands" }')
#m.receive()
#
#m.send('{ "execute": "system_reset" }')
#m.receive()
#m.send('{ "execute": "system_powerdown" }')
#m.receive()
#
#m.send('{ "execute": "qmp_capabilities" }')
#m.receive()
#
#m.close()
